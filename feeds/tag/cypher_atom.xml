<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Quantitative Artisan</title><link href="http://www.quantisan.com/" rel="alternate"></link><link href="http://www.quantisan.com/feeds/tag/cypher_atom.xml" rel="self"></link><id>http://www.quantisan.com/</id><updated>2012-11-14T22:31:00+00:00</updated><entry><title>Recommendation discovery via graph traversal</title><link href="http://www.quantisan.com/recommendation-discovery-via-graph-traversal/" rel="alternate"></link><updated>2012-11-14T22:31:00+00:00</updated><author><name>Paul Lam</name></author><id>tag:www.quantisan.com,2012-11-14:recommendation-discovery-via-graph-traversal/</id><summary type="html">&lt;p&gt;I am quite excited about graph computing these days. It represents relational data such as customer behaviour naturally and otherwise complicated problems break down to simple pattern matching algorithm. Take recommendation system, for example. One way to do it is by machine learning as &lt;a href="http://en.wikipedia.org/wiki/Recommender_system"&gt;Wikipedia suggests&lt;/a&gt;. But if we represent the data in a property graph, a simplistic solution surfaces intuitively. &lt;/p&gt;
&lt;p&gt;Picture this. If Bob likes item A; Cathy likes both item A and item B; then we can make the commutative link of item B for Bob.&lt;/p&gt;
&lt;p&gt;Let's try it out in &lt;a href="http://www.neo4j.org"&gt;Neo4j&lt;/a&gt; using &lt;a href="http://console.neo4j.org/?id=2096v6"&gt;this pre-built web console example&lt;/a&gt;. You should see this graph with 4 person and 5 food items.&lt;/p&gt;
&lt;p&gt;&lt;img alt="simple graph" src="/static/images/2012/simple_graph.png" /&gt;&lt;/p&gt;
&lt;p&gt;Using this &lt;a href="http://docs.neo4j.org/chunked/milestone/cypher-query-lang.html"&gt;Cypher query&lt;/a&gt;, we get a list of all users and what food they like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;START&lt;/span&gt;   &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;node_auto_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;MATCH&lt;/span&gt;   &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;IS_A&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;LIKE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="n"&gt;RETURN&lt;/span&gt;  &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second line is where we &lt;code&gt;match&lt;/code&gt; the pattern that &lt;code&gt;person is a user&lt;/code&gt; and that &lt;code&gt;person like x&lt;/code&gt;. This query reads almost like the question which we want to ask.&lt;/p&gt;
&lt;p&gt;We return all the person and those food they like, &lt;code&gt;x&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Andy&amp;quot;&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Andy&amp;quot;&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Andy&amp;quot;&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fish&amp;quot;&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Doug&amp;quot;&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Doug&amp;quot;&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+------------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Taking this a step further, we can find all the top common &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; that people like together in the above graph.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;START   food &lt;span class="o"&gt;=&lt;/span&gt; node&lt;span class="o"&gt;:&lt;/span&gt;node_auto_index&lt;span class="p"&gt;(&lt;/span&gt;type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;food&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; user &lt;span class="o"&gt;=&lt;/span&gt; node&lt;span class="o"&gt;:&lt;/span&gt;node_auto_index&lt;span class="p"&gt;(&lt;/span&gt;type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
MATCH   food&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;IS_A&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;x&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;LIKE&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;person&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;IS_A&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;user&lt;span class="p"&gt;,&lt;/span&gt;
        person&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;LIKE&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;y&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;IS_A&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;food
WHERE   NOT x &lt;span class="o"&gt;=&lt;/span&gt; y
RETURN  x.name&lt;span class="p"&gt;,&lt;/span&gt; y.name&lt;span class="p"&gt;,&lt;/span&gt; count&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; as cnt 
ORDER BY cnt DESC 
LIMIT &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Resulting in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+---------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+---------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fish&amp;quot;&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fish&amp;quot;&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fish&amp;quot;&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bread&amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fish&amp;quot;&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+---------------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So we find that a lot uf users that likes apple also likes orange or bread. We can then pick out all the people that likes &lt;code&gt;apple&lt;/code&gt; but not &lt;code&gt;orange&lt;/code&gt; yet to suggest (read: spam) &lt;code&gt;orange&lt;/code&gt; to them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;START&lt;/span&gt;   &lt;span class="n"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;node_auto_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;orange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;node_auto_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;MATCH&lt;/span&gt;   &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;LIKE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt;
&lt;span class="n"&gt;WHERE&lt;/span&gt;   &lt;span class="n"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;LIKE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;RETURN&lt;/span&gt;  &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

&lt;span class="o"&gt;+-------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+-------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+-------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Easy, yes?&lt;/p&gt;</summary><category term="graph computing"></category><category term="recommendation system"></category><category term="neo4j"></category><category term="cypher"></category></entry></feed>